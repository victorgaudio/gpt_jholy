# AnythingLLM - Configuração para Produção/Digital Ocean
# IMPORTANTE: Altere todos os valores de segurança antes do deploy!

SERVER_PORT=3001
STORAGE_DIR="/app/server/storage"
UID='1000'
GID='1000'

# CONFIGURAÇÕES DE SEGURANÇA - ALTERE ANTES DO DEPLOY!
SIG_KEY='CHANGE-THIS-TO-RANDOM-32-CHAR-STRING' # Generate random string at least 32 chars long
SIG_SALT='CHANGE-THIS-TO-RANDOM-32-CHAR-SALT' # Generate random string at least 32 chars long
JWT_SECRET="CHANGE-THIS-TO-RANDOM-JWT-SECRET" # Generate random string at least 12 chars long
JWT_EXPIRY="30d"

# AUTENTICAÇÃO PARA PRODUÇÃO
AUTH_TOKEN="CHANGE-THIS-TO-SECURE-PASSWORD" # Password para acessar a aplicação

###########################################
######## LLM PROVIDER PARA PRODUÇÃO ######
###########################################
# OpenAI (Recomendado para produção)
LLM_PROVIDER='openai'
OPEN_AI_KEY=YOUR_OPENAI_API_KEY_HERE
OPEN_MODEL_PREF='gpt-4o'

# Anthropic (Alternativa)
# LLM_PROVIDER='anthropic'
# ANTHROPIC_API_KEY=sk-ant-your-api-key-here
# ANTHROPIC_MODEL_PREF='claude-3-sonnet-20240229'

# Groq (Rápido e econômico)
# LLM_PROVIDER='groq'
# GROQ_API_KEY=gsk_your-api-key-here
# GROQ_MODEL_PREF=llama3-8b-8192

###########################################
######## EMBEDDING PARA PRODUÇÃO #########
###########################################
# OpenAI Embeddings (Recomendado para produção)
EMBEDDING_ENGINE='openai'
# OPEN_AI_KEY já definido acima
EMBEDDING_MODEL_PREF='text-embedding-ada-002'

###########################################
######## VECTOR DATABASE #################
###########################################
# PostgreSQL para produção (mais robusto que SQLite)
VECTOR_DB="pgvector"
PGVECTOR_CONNECTION_STRING="postgresql://anythingllm:CHANGE_POSTGRES_PASSWORD@postgres:5432/anythingllm"
PGVECTOR_TABLE_NAME="anythingllm_vectors"

# LanceDB (alternativa mais simples)
# VECTOR_DB="lancedb"

###########################################
######## CONFIGURAÇÕES DE PRODUÇÃO #######
###########################################
# Habilitar telemetria (opcional)
DISABLE_TELEMETRY="false"

# Configurações de senha seguras
PASSWORDMINCHAR=8
PASSWORDMAXCHAR=250
PASSWORDLOWERCASE=1
PASSWORDUPPERCASE=1
PASSWORDNUMERIC=1
PASSWORDSYMBOL=1
PASSWORDREQUIREMENTS=4

###########################################
######## AUDIO MODELS ####################
###########################################
# OpenAI Whisper para produção (melhor qualidade)
WHISPER_PROVIDER="openai"
# OPEN_AI_KEY já definido acima

# TTS OpenAI para produção
TTS_PROVIDER="openai"
TTS_OPEN_AI_KEY=YOUR_OPENAI_API_KEY_HERE
TTS_OPEN_AI_VOICE_MODEL=nova

###########################################
######## CONFIGURAÇÕES AVANÇADAS #########
###########################################
# Idiomas para OCR
TARGET_OCR_LANG=eng,por,spa,fra

# Configurações para Docker
ANYTHINGLLM_CHROMIUM_ARGS="--no-sandbox,--disable-setuid-sandbox"

###########################################
######## AGENT SERVICE KEYS ##############
###########################################
# Serviços de busca para agentes (opcional)
# AGENT_GSE_KEY=your-google-search-key
# AGENT_GSE_CTX=your-google-search-context
# AGENT_SERPER_DEV_KEY=your-serper-key
# AGENT_TAVILY_API_KEY=your-tavily-key

###########################################
######## INSTRUÇÕES DE DEPLOY ############
###########################################
# 1. Substitua todos os valores "CHANGE-THIS-*" por valores seguros aleatórios
# 2. Configure suas API keys (OpenAI, etc.)
# 3. Ajuste AUTH_TOKEN para uma senha forte
# 4. Configure o PostgreSQL se usando pgvector
# 5. Teste localmente antes do deploy: docker-compose -f docker-compose.production.yml up